{"version":3,"sources":["components/article_view.js","components/main.js","components/article_page.js","data/color.js","components/write.js","App.js","reportWebVitals.js","index.js"],"names":["ArticleView","props","state","articles","submitProgress","setCurrArticle","bind","deleteArticle","submitArticle","article","this","onCurrArticle","id","onArticleDelete","onArticleSubmit","className","style","backgroundColor","color","borderColor","onClick","to","title","length","progress","height","role","width","data-toggle","data-target","React","Component","Main","username","userurl","ModalRef","createRef","deleteArticleId","submissionText","userText","infoText","getSavedArticles","getPosts","setNewCurrArticle","updateArticles","submitPost","confirmSubmission","setUsername","setUserUrl","store","key","localStorage","getItem","setState","obj","openRequest","indexedDB","open","onupgradeneeded","DB","result","objectStoreNames","contains","createObjectStore","onerror","console","error","onsuccess","tx","transaction","objectStore","get","oncomplete","onArticlesLoad","onArticleCreate","map","i","currentArticle","text","push","splice","data","put","postId","firebase","ref","child","set","e","name","target","value","setItem","url","posts","posts1","posts2","tabIndex","aria-hidden","type","data-dismiss","aria-label","textAlign","placeholder","onChange","dangerouslySetInnerHTML","__html","fontSize","float","background","textDecoration","href","ArticlePage","TextRef","TitleRef","DeleteStyles","setProgress","updateArticle","currArticle","current","innerHTML","event","preventDefault","originalEvent","clipboardData","getData","document","execCommand","len","innerText","onProgress","onArticleSave","rows","contentEditable","onPaste","onInput","colors","WriteArticle","maxLetters","StyleText","getColorBlocks","setArticleColor","articleColor","Math","round","App","setArticles","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54021475.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../App.css\";\r\n\r\nclass ArticleView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n    };\r\n\r\n    this.submitProgress = 0;\r\n\r\n    this.setCurrArticle = this.setCurrArticle.bind(this);\r\n    this.deleteArticle = this.deleteArticle.bind(this);\r\n    this.submitArticle = this.submitArticle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  setCurrArticle() {\r\n    let article = this.props.article;\r\n\r\n    this.props.onCurrArticle(article);\r\n  }\r\n\r\n  deleteArticle() {\r\n    let id = this.props.article.id;\r\n    this.props.onArticleDelete(id);\r\n  }\r\n\r\n  submitArticle() {\r\n    let id = this.props.article.id;\r\n\r\n    this.props.onArticleSubmit(id);\r\n  }\r\n\r\n  render() {\r\n    let article = this.props.article;\r\n\r\n    return (\r\n      <div className=\"articleView\" style={{ backgroundColor: article.color }}>\r\n        <div className=\"articleViewHeader\">\r\n          <button\r\n            className=\"postBtn\"\r\n            style={{ borderColor: article.color }}\r\n            onClick={this.deleteArticle}\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </button>\r\n          <NavLink to=\"/write\">\r\n            <button\r\n              className=\"postBtn\"\r\n              style={{ borderColor: article.color }}\r\n              onClick={this.setCurrArticle}\r\n            >\r\n              открыть\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"articleViewTitle\">\r\n          {article.title.length ? article.title : \"Без заголовка\"}\r\n        </div>\r\n        <div className=\"articleViewFooter\">\r\n          {article.progress < this.submitProgress ? (\r\n            <div\r\n              className=\"progress\"\r\n              style={{ backgroundColor: \"rgba(0, 0, 0, 0.3)\", height: \"15px\" }}\r\n            >\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{\r\n                  width: article.progress + \"%\",\r\n                  backgroundColor: article.color,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              className=\"submitPostBtn\"\r\n              style={{borderColor: article.color}}\r\n              onClick={this.submitArticle}\r\n              data-toggle=\"modal\"\r\n              data-target=\"#submitModal\"\r\n            >\r\n              опубликовать\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticleView;\r\n","import React from \"react\";\r\n\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport ArticleView from \"./article_view\";\r\n\r\nimport \"../App.css\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n\r\n      username: \"\",\r\n      userurl: \"\",\r\n    };\r\n\r\n    this.ModalRef = React.createRef();\r\n\r\n    this.deleteArticleId = -1;\r\n    this.submissionText = `\r\n      Пожалуйста, проверьте вашу запись перед публикацией.\r\n      Изменить ее содержимое после отправки будет невозможно.\r\n      <br />\r\n      <br />\r\n      Ваша запись будет опубликована на стене сообщества Май\r\n      в ближайшие дни после проверки администрацией.\r\n    `;\r\n    this.userText = `\r\n      Пожалуйста, введите ваше имя или псевдоним, чтобы мы могли указать автора\r\n      статьи. По желанию можно указать ссылку на свою личную страницу или\r\n      группу-блог Вконтакте. Если данные не указаны, ваши записи будут публиковаться\r\n      анонимно.\r\n    `;\r\n    this.infoText = `\r\n      <h4>Рекомендации к написанию статей</h4>\r\n      1. Тематика публикации не должна сильно отличаться от постов в сообществе Май.\r\n      Темы, на которые следует ориентироваться, могут быть следующие: саморазвитие,\r\n      забота о себе, мотивация, ментальное или физическое здоровье, психология и подобное.\r\n      Записи не соответствующие тематике сообщества не будут опубликованы на стене сообщества.\r\n      <br />\r\n      <br />\r\n      2. Если вы хотите опубликовать статью следует учитывать, что объем таких публикаций достаточно\r\n      небольшой (6 - 8 фотографий в посте, см. пример на стене сообщества), рекомендуем выделять\r\n      основные мысли, писать в первую очередь о том, что действительно необходимо упомянуть.\r\n      <br />\r\n      <br />\r\n      3. Разделяйте текст на отдельные абзацы и используйте заголовки\r\n      для каждой части. В таком формате людям легче воспринимать информацию,\r\n      чем читать сплошной текст.\r\n      <br />\r\n      <br />\r\n      4. Выделяйте слова или словосочетания с помощью стилей там, где это\r\n      уместно, для комфортного чтения текста.\r\n      <br />\r\n      <br />\r\n      <h4>Объем публикаций</h4>\r\n      Полоса прогресса в редакторе показывает текущий объем записи. Для публикации\r\n      необходимо, чтобы объем поста составлял > 99%. В этом случае полоса прогресса\r\n      будет полностью заполнена, и вы сможете опубликовать запись. Максимальный объем\r\n      статьи не должен превышать 120%.\r\n      <br />\r\n      <br />\r\n      <h4>Авторство</h4>\r\n      Имя автора и ссылка на него указываются в комментариях под постом а также на\r\n      последней фотографии в посте и не удаляются. В качестве ссылки на автора\r\n      принимаются только ресурсы Вконтакте, например, ваша личная страница или группа-блог.\r\n      Если данные об авторе не указаны, запись будет опубликована анонимно.\r\n    `;\r\n\r\n    this.getSavedArticles = this.getSavedArticles.bind(this);\r\n    this.getPosts = this.getPosts.bind(this);\r\n    this.setCurrArticle = this.setCurrArticle.bind(this);\r\n    this.setNewCurrArticle = this.setNewCurrArticle.bind(this);\r\n    this.deleteArticle = this.deleteArticle.bind(this);\r\n    this.updateArticles = this.updateArticles.bind(this);\r\n    this.submitPost = this.submitPost.bind(this);\r\n    this.confirmSubmission = this.confirmSubmission.bind(this);\r\n    this.setUsername = this.setUsername.bind(this);\r\n    this.setUserUrl = this.setUserUrl.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let obj = {\r\n      store: \"may-articles\",\r\n      key: \"articles\",\r\n    };\r\n\r\n    this.getSavedArticles(obj);\r\n\r\n    let username = localStorage.getItem(\"may-username\");\r\n    let userurl = localStorage.getItem(\"may-userurl\");\r\n\r\n    if (!username) username = \"\";\r\n    if (!userurl) userurl = \"\";\r\n\r\n    this.setState({\r\n      username,\r\n      userurl,\r\n    });\r\n  }\r\n\r\n  getSavedArticles(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readonly\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      let articles = store.get(obj.key);\r\n\r\n      tx.oncomplete = () => {\r\n        if (articles.result) {\r\n          this.setState({ articles: articles.result }, () => {\r\n            this.props.onArticlesLoad(articles.result);\r\n          });\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  setNewCurrArticle(article) {\r\n    this.props.onArticleCreate(article);\r\n  }\r\n\r\n  getPosts() {\r\n    let response = [];\r\n    let articles = this.state.articles;\r\n\r\n    response = articles.map((article, i) => {\r\n      return (\r\n        <ArticleView\r\n          key={article.title + i}\r\n          article={article}\r\n          onCurrArticle={this.setNewCurrArticle}\r\n          onArticleDelete={this.deleteArticle}\r\n          onArticleSubmit={this.confirmSubmission}\r\n        />\r\n      );\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  setCurrArticle() {\r\n    let articles = this.state.articles;\r\n    let id = articles.length;\r\n\r\n    let currentArticle = {\r\n      id,\r\n      title: \"\",\r\n      text: \"\",\r\n      progress: 0,\r\n      color: \"white\",\r\n    };\r\n\r\n    articles.push(currentArticle);\r\n\r\n    this.props.onArticlesLoad(articles);\r\n    this.props.onArticleCreate(currentArticle);\r\n  }\r\n\r\n  deleteArticle(id) {\r\n    let articles = this.state.articles;\r\n\r\n    articles.splice(id, 1);\r\n\r\n    for (let i = id; i < articles.length; i++) {\r\n      articles[i].id--;\r\n    }\r\n\r\n    this.setState({ articles });\r\n    this.props.onArticlesLoad(articles);\r\n    this.updateArticles({\r\n      store: \"may-articles\",\r\n      key: \"articles\",\r\n      data: articles,\r\n    });\r\n  }\r\n\r\n  updateArticles(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readwrite\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      store.put(obj.data, obj.key);\r\n    };\r\n  }\r\n\r\n  confirmSubmission(id) {\r\n    this.deleteArticleId = id;\r\n  }\r\n\r\n  submitPost() {\r\n    let id = this.deleteArticleId;\r\n    let postId = firebase.database().ref().child(\"articles\").push().key;\r\n    let data = this.state.articles[id];\r\n\r\n    let username = localStorage.getItem(\"may-username\");\r\n    let userurl = localStorage.getItem(\"may-userurl\");\r\n\r\n    let article = {\r\n      title: data.title,\r\n      text: data.text,\r\n      color: data.color,\r\n      username,\r\n      userurl,\r\n    };\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"articles/article\" + postId)\r\n      .set(article);\r\n\r\n    this.deleteArticle(id);\r\n\r\n    this.deleteArticleId = -1;\r\n  }\r\n\r\n  setUsername(e) {\r\n    let name = e.target.value;\r\n\r\n    localStorage.setItem(\"may-username\", name);\r\n    this.setState({ username: name });\r\n  }\r\n\r\n  setUserUrl(e) {\r\n    let url = e.target.value;\r\n\r\n    localStorage.setItem(\"may-userurl\", url);\r\n    this.setState({ userurl: url });\r\n  }\r\n\r\n  render() {\r\n    let posts = this.getPosts();\r\n\r\n    let posts1 = [];\r\n    let posts2 = [];\r\n\r\n    for (let i = 0; i < posts.length; i++) {\r\n      if (i % 2 === 0) posts1.push(posts[i]);\r\n      else posts2.push(posts[i]);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"userModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-scrollable\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5>Автор публикаций</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\" style={{ textAlign: \"center\" }}>\r\n                <input\r\n                  className=\"userInput\"\r\n                  type=\"text\"\r\n                  value={this.state.username}\r\n                  placeholder=\"Имя или псевдоним\"\r\n                  onChange={this.setUsername}\r\n                />\r\n                <input\r\n                  className=\"userInput\"\r\n                  type=\"text\"\r\n                  value={this.state.userurl}\r\n                  placeholder=\"Ссылка на автора\"\r\n                  onChange={this.setUserUrl}\r\n                />\r\n                <br />\r\n                <br />\r\n                <div\r\n                  className=\"submissionText\"\r\n                  dangerouslySetInnerHTML={{ __html: this.userText }}\r\n                ></div>\r\n                <br />\r\n                <button className=\"confirmSubmitBtn\" data-dismiss=\"modal\">\r\n                  сохранить\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"submitModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-scrollable\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5>Опубликовать в Май</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\" style={{ textAlign: \"center\" }}>\r\n                <div style={{ fontSize: \"40px\", color: \"rgba(0, 0, 0, 0.7)\" }}>\r\n                  <i className=\"fas fa-paper-plane\"></i>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div\r\n                  className=\"submissionText\"\r\n                  dangerouslySetInnerHTML={{ __html: this.submissionText }}\r\n                ></div>\r\n                <br />\r\n                <button\r\n                  className=\"confirmSubmitBtn\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={this.submitPost}\r\n                >\r\n                  опубликовать\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"infoModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-scrollable\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5>Общая информация</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div\r\n                  className=\"submissionText\"\r\n                  dangerouslySetInnerHTML={{ __html: this.infoText }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"HeaderMain\">\r\n          <button\r\n            className=\"headerMainBtn\"\r\n            style={{ float: \"left\" }}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#userModal\"\r\n          >\r\n            <i className=\"fas fa-user\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"headerMainBtn\"\r\n            style={{ float: \"left\" }}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#infoModal\"\r\n          >\r\n            <i className=\"fas fa-info\"></i>\r\n          </button>\r\n\r\n          <NavLink to=\"/write\">\r\n            <button className=\"headerMainBtn\" onClick={this.setCurrArticle}>\r\n              <i className=\"fas fa-edit\"></i>\r\n              создать статью\r\n            </button>\r\n          </NavLink>\r\n        </div>\r\n\r\n        <div className=\"BodyMain\">\r\n          <div className=\"wrapper\">\r\n            {posts.length ? (\r\n              <div className=\"row\">\r\n                <div className=\"col\">{posts1}</div>\r\n                <div className=\"col\">{posts2}</div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"textPage\">нет неопубликованных записей</div>\r\n            )}\r\n\r\n            <br />\r\n            <div\r\n              className=\"supportCardView\"\r\n              style={{\r\n                background: `url(https://64.media.tumblr.com/fb6257322a3e73e7aa7247ba2b678163/tumblr_pp3mmshJhz1xvjko7o1_1280.gifv) center/100% no-repeat`,\r\n              }}\r\n            >\r\n              <div className=\"supportCardBlackout\">\r\n                <div className=\"supportCardTitle\">Есть вопросы?</div>\r\n                <div className=\"supportCardText\">\r\n                  Напиши нам в лс, если у тебя возникли какие-либо вопросы по\r\n                  приложению или публикации постов. Мы ответим тебе в ближайшее\r\n                  время.\r\n                </div>\r\n                <button className=\"supportCardBtn\">\r\n                  <a\r\n                    style={{ textDecoration: \"none\", color: \"#d2d5ff\" }}\r\n                    href=\"https://vk.com/im?sel=-160404048\"\r\n                  >\r\n                    написать\r\n                  </a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\n// import * as firebase from \"firebase/app\";\r\n// import \"firebase/database\";\r\n\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../styles/WriteArticle.css\";\r\n\r\nclass ArticlePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.TextRef = React.createRef();\r\n    this.TitleRef = React.createRef();\r\n\r\n    this.DeleteStyles = this.DeleteStyles.bind(this);\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.updateArticle = this.updateArticle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let article = this.props.currArticle;\r\n\r\n    if (article.title) {\r\n      this.TitleRef.current.value = article.title;\r\n    }\r\n\r\n    if (article.text) {\r\n      this.TextRef.current.innerHTML = article.text;\r\n    }\r\n  }\r\n\r\n  DeleteStyles(event) {\r\n    event.preventDefault();\r\n    let text = (event.originalEvent || event).clipboardData.getData(\r\n      \"text/plain\"\r\n    );\r\n    document.execCommand(\"insertText\", false, text);\r\n  }\r\n\r\n  setProgress() {\r\n    let text = this.TextRef.current.innerText;\r\n    let len = text.length;\r\n\r\n    this.props.onProgress(len);\r\n    this.updateArticle();\r\n  }\r\n\r\n  updateArticle() {\r\n    let title = this.TitleRef.current.value;\r\n    let text = this.TextRef.current.innerHTML;\r\n    let progress = this.props.currArticle.progress;\r\n    let color = this.props.currArticle.color;\r\n    let id = this.props.currArticle.id;\r\n    let articles = this.props.articles;\r\n\r\n    if (!id) {\r\n      id = 0;\r\n    }\r\n\r\n    articles[id] = {\r\n      id,\r\n      title,\r\n      text,\r\n      progress,\r\n      color,\r\n    };\r\n\r\n    let obj = {\r\n      store: \"may-articles\",\r\n      key: \"articles\",\r\n      data: articles,\r\n    };\r\n\r\n    this.props.onArticleSave(obj);\r\n  }\r\n\r\n  render() {\r\n    let article = this.props.currArticle;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"ArticlePage\"\r\n          style={{ backgroundColor: article.color }}\r\n        >\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"ArticlePageTitle\"\r\n            rows=\"2\"\r\n            ref={this.TitleRef}\r\n            placeholder=\"Заголовок статьи\"\r\n            onChange={this.updateArticle}\r\n          ></textarea>\r\n          <div\r\n            className=\"ArticlePageText\"\r\n            contentEditable=\"true\"\r\n            placeholder=\"Текст\"\r\n            ref={this.TextRef}\r\n            onPaste={this.DeleteStyles}\r\n            onInput={this.setProgress}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticlePage;\r\n","const colors = [\r\n    \"#FFA69E\",\r\n    \"#74F2CE\",\r\n    \"#7EE8FA\",\r\n    \"#E899DC\",\r\n    \"#FFAC81\",\r\n    \"#F7B42C\",\r\n    \"#ABE9CD\",\r\n    \"#F8CEEC\",\r\n    \"#B0F3F1\",\r\n    \"#DAD2F3\",\r\n    \"#F3E6E8\",\r\n    \"#D5FEFD\",\r\n    \"#DCF8EF\",\r\n    \"#7DDFF8\",\r\n    \"#B9D1EB\",\r\n    \"#A1BAFE\",\r\n    \"#E1D4E6\",\r\n    \"#FFA69E\",\r\n    \"#00BFB2\",\r\n    \"#FF4081\",\r\n    \"#A29BFE\",\r\n    \"#7ED6DF\",\r\n    \"#48DBFB\",\r\n    \"#FF6B6B\",\r\n  ];\r\n  \r\n  export default colors;\r\n  ","import React from \"react\";\r\n\r\n// import * as firebase from \"firebase/app\";\r\n// import \"firebase/database\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport ArticlePage from \"./article_page\";\r\n\r\nimport \"../styles/WriteArticle.css\";\r\nimport colors from \"../data/color\";\r\n\r\nclass WriteArticle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      article: this.props.currArticle,\r\n    };\r\n\r\n    this.maxLetters = 3550;\r\n\r\n    this.setProgress = this.setProgress.bind(this);\r\n    this.StyleText = this.StyleText.bind(this);\r\n    this.getColorBlocks = this.getColorBlocks.bind(this);\r\n    this.setArticleColor = this.setArticleColor.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  setProgress(len) {\r\n    let progress = (len * 100) / this.maxLetters;\r\n    let article = this.state.article;\r\n\r\n    article.progress = progress;\r\n\r\n    this.setState({ article });\r\n  }\r\n\r\n  StyleText(style) {\r\n    if (style === \"heading\") {\r\n      document.execCommand(\"formatBlock\", false, \"h3\");\r\n    } else document.execCommand(style, false, null);\r\n  }\r\n\r\n  getColorBlocks() {\r\n    let response = [];\r\n\r\n    response = colors.map((color, i) => {\r\n      return (\r\n        <div\r\n          className=\"colorBlock\"\r\n          style={{ backgroundColor: color }}\r\n          key={i}\r\n          onClick={this.setArticleColor.bind(this, color)}\r\n        ></div>\r\n      );\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  setArticleColor(articleColor) {\r\n    let posts = this.props.articles;\r\n    let id = this.state.article.id;\r\n\r\n    posts[id].color = articleColor;\r\n    this.setState({ article: posts[id] });\r\n\r\n    let obj = {\r\n      store: \"may-articles\",\r\n      key: \"articles\",\r\n      data: posts,\r\n    };\r\n\r\n    this.updateArticle(obj);\r\n  }\r\n\r\n  updateArticle(obj) {\r\n    let openRequest = indexedDB.open(obj.store, 1);\r\n\r\n    openRequest.onupgradeneeded = () => {\r\n      let DB = openRequest.result;\r\n      if (!DB.objectStoreNames.contains(obj.store)) {\r\n        DB.createObjectStore(obj.store);\r\n      }\r\n    };\r\n\r\n    openRequest.onerror = function () {\r\n      console.error(\"Can't create DB\", openRequest.error);\r\n    };\r\n\r\n    openRequest.onsuccess = () => {\r\n      let DB = openRequest.result;\r\n\r\n      let tx = DB.transaction(obj.store, \"readwrite\");\r\n      let store = tx.objectStore(obj.store);\r\n\r\n      store.put(obj.data, obj.key);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let colors = this.getColorBlocks();\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"colorsModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div\r\n              className=\"modal-content\"\r\n              style={{ backgroundColor: \"rgba(37, 37, 51)\", color: \"#d2d5ff\" }}\r\n            >\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Цвет статьи</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\" style={{ textAlign: \"center\" }}>\r\n                {colors}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Header\">\r\n          <NavLink to=\"/\">\r\n            <button className=\"HeaderBtn\" style={{ float: \"left\" }}>\r\n              <i className=\"fas fa-home\"></i>\r\n            </button>\r\n          </NavLink>\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"bold\")}\r\n          >\r\n            <i className=\"fas fa-bold\"></i>\r\n          </button>\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"italic\")}\r\n          >\r\n            <i className=\"fas fa-italic\"></i>\r\n          </button>\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"underline\")}\r\n          >\r\n            <i className=\"fas fa-underline\"></i>\r\n          </button>\r\n          {/* <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"strikethrough\")}\r\n          >\r\n            <i className=\"fas fa-strikethrough\"></i>\r\n          </button> */}\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"insertUnorderedList\")}\r\n          >\r\n            <i className=\"fas fa-list-ul\"></i>\r\n          </button>\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            onClick={this.StyleText.bind(this, \"insertOrderedList\")}\r\n          >\r\n            <i className=\"fas fa-list-ol\"></i>\r\n          </button>\r\n          <button\r\n            className=\"HeaderBtn\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#colorsModal\"\r\n          >\r\n            <i className=\"fas fa-palette\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"progress progressBar\">\r\n          <div\r\n            className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n            role=\"progressbar\"\r\n            style={{\r\n              width: this.state.article.progress + \"%\",\r\n              backgroundColor: \"#ffdef0\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <div className=\"Body\">\r\n          <div className=\"wrapper\">\r\n            <ArticlePage\r\n              currArticle={this.state.article}\r\n              articles={this.props.articles}\r\n              onProgress={this.setProgress}\r\n              onArticleSave={this.updateArticle}\r\n            />\r\n          </div>{\" \"}\r\n        </div>\r\n\r\n        <div className=\"Footer\">\r\n          объем статьи: {Math.round(this.state.article.progress) + \"%\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WriteArticle;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Main from \"./components/main\";\r\nimport WriteArticle from \"./components/write\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      articles: [],\r\n      currentArticle: {},\r\n    };\r\n\r\n    this.setArticles = this.setArticles.bind(this);\r\n    this.setCurrArticle = this.setCurrArticle.bind(this);\r\n  }\r\n\r\n  setArticles(articles) {\r\n    this.setState({articles});\r\n  }\r\n\r\n  setCurrArticle(currentArticle) {\r\n    this.setState({currentArticle});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Main\r\n                onArticlesLoad={this.setArticles}\r\n                onArticleCreate={this.setCurrArticle}\r\n              />\r\n            </Route>\r\n            <Route path=\"/write\">\r\n              <WriteArticle\r\n                articles={this.state.articles}\r\n                currArticle={this.state.currentArticle}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as firebase from \"firebase/app\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDM4JCxS6_vYEoba-TjFTqVLVYp_Oc0agY\",\r\n  authDomain: \"may-articles.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://may-articles-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"may-articles\",\r\n  storageBucket: \"may-articles.appspot.com\",\r\n  messagingSenderId: \"678415622728\",\r\n  appId: \"1:678415622728:web:8403375d12e292c4202e7d\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}